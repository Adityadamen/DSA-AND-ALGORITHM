Transform One String to Another using Minimum Number of Given Operation

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int minOps(string& A , string& B)
{
    int n,m;
    n= A.length();
    m= A.length();
    int count[256];
    memset(count,0,sizeof(count));
    if(n!=m)
    {
        return -1;
    }
    for(int i=0;i<n;i++)
    {
        count[B[i]]++;
    }
    for(int i=0;i<n;i++)
    {
        count[A[i]]--;
    }
    for(int i=0;i<256;i++)
    {
       if(count[i])
       {
          return -1;
       }
    }
    int cnt=0;;
    for(int i=n-1,j=n-1;i>=0;)
    {
        while(i>=0 && A[i]!=B[j])
        {
            i--;
            cnt++;
            
        }
        if(i>=0)
        {
            i--;
            j--;
        }
    }
    return cnt;
    
    
    
}

int main() {
    string A = "EACBD";
    string B = "EABCD";
    cout << "Minimum number of operations "
            "required is " << minOps(A, B);
	
	return 0;
}


Output: 

Minimum number of operations required is 3

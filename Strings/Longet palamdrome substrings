
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution {
  public:
    string longestPalin (string S) {
        int l,h;
        string k;
        int start=0,end=1;
        for(int i=1;i<S.length();i++)
        {
            l=i-1; //It is for even number of substring
            h=i;
            while(l>=0 && h<S.length() && S[l]== S[h])
            {
                if(h-l+1>end)
                {
                    start=l;
                    end=h-l+1;
                }
                l--;
                h++;
            }
            l=i-1; //it is for odd num ber of substring
            h=i+1;
            while(l>=0 &&h<S.length() &&S[l]== S[h])
            {
                if(h-l+1>end)
                {
                    start=l;
                    end=h-l+1;
                }
                l--;
                h++;
            }
            
        }
        for(int i =start;i<=start+end-1;i++)
        {
            k.push_back(S[i]);
        }
        return k;
    }
};

// { Driver Code Starts.

int main()
{
    int t; cin >> t;
    while (t--)
    {
        string S; cin >> S;
        
        Solution ob;
        cout << ob.longestPalin (S) << endl;
    }
}
// Contributed By: Pranay Bansal
  // } Driver Code Ends
  
  
  
  Input:
S = "aaaabbaa"
Output: aabbaa
Explanation: The longest Palindromic
substring is "aabbaa".

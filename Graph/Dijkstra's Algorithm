int main() {
	vector<pair<int,int>>adj[5];
	vector<int>dist(5);
	dist[0]=0;
	for(int i=1;i<5;i++)
	dist[i]=INT_MAX;
	vector<int>ans;
	adj[0].push_back({1,1});
	adj[0].push_back({2,3});
	adj[0].push_back({3,2});
	adj[1].push_back({0,1});
	adj[1].push_back({3,4});
	adj[1].push_back({4,1});
	adj[2].push_back({0,3});
	adj[2].push_back({3,4});
	adj[3].push_back({0,2});
	adj[3].push_back({1,4});
	adj[3].push_back({4,2});
	adj[3].push_back({2,4});
	adj[4].push_back({1,1});
	adj[4].push_back({3,2});
	
	priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
	pq.push({0,0});
	while(!pq.empty()){
	    int distance=pq.top().first;
	    int curr=pq.top().second;
	    pq.pop();
	    for(auto it:adj[curr]){
	        int nextNode=it.first;
	        int nodeDistance=it.second;
	        if(dist[nextNode]>dist[curr]+nodeDistance){
	            dist[nextNode]=dist[curr]+nodeDistance;
	            pq.push({dist[nextNode],nextNode});
	        }
	    }
	}
	for(int i=0;i<5;i++)
	cout<<dist[i];
	
	return 0;
}
